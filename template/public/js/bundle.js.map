{"version":3,"file":"bundle.js","sources":["../../client/stores/alpine-live-reload-persist.store.ts","../../client/stores/stores.ts","../../client/live-reload-client.ts"],"sourcesContent":["import Alpine from \"alpinejs\";\n\ntype StateMap = Record<number, string>;\n\nexport class ReloadStateStore {\n\tstatic NAME = \"reloadState\";\n\n\tpublic capture() {\n\t\tconst stateMap: StateMap = {};\n\t\tdocument.querySelectorAll<HTMLElement>(\"[x-data]\").forEach((el, index) => {\n\t\t\tconst state = Alpine.$data(el);\n\t\t\tif (state) {\n\t\t\t\tstateMap[index] = JSON.parse(JSON.stringify(state)); // deep copy\n\t\t\t}\n\t\t});\n\t\tsessionStorage.setItem(\"__alpine_state__\", JSON.stringify(stateMap));\n\t}\n\n\tpublic restore() {\n\t\tconst raw = sessionStorage.getItem(\"__alpine_state__\");\n\t\tif (!raw) return;\n\t\ttry {\n\t\t\tconst stateMap: StateMap = JSON.parse(raw);\n\t\t\tdocument\n\t\t\t\t.querySelectorAll<HTMLElement>(\"[x-data]\")\n\t\t\t\t.forEach((el, index) => {\n\t\t\t\t\tconst state = Alpine.$data(el);\n\t\t\t\t\tif (state) {\n\t\t\t\t\t\tObject.assign(state, stateMap[index]);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\tsessionStorage.removeItem(\"__alpine_state__\");\n\t\t} catch (e) {\n\t\t\tconsole.warn(\"Could not restore Alpine state\", e);\n\t\t}\n\t}\n}\n","import Alpine from \"alpinejs\";\nimport { ReloadStateStore } from \"./alpine-live-reload-persist.store\";\n\nconst stores = {\n\t[ReloadStateStore.NAME]: ReloadStateStore,\n} as const;\n\ntype Stores = typeof stores;\ntype StoreInstances = {\n\t[K in keyof Stores]: InstanceType<Stores[K]>;\n};\n\nexport function useStore<K extends keyof Stores>(name: K): StoreInstances[K] {\n\treturn Alpine.store(name) as StoreInstances[K];\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n\tif (Alpine) {\n\t\tfor (const [key, StoreClass] of Object.entries(stores))\n\t\t\tAlpine.store(key, new StoreClass());\n\t} else {\n\t\tdocument.addEventListener(\"alpine:init\", () => {\n\t\t\tfor (const key of Object.keys(stores)) {\n\t\t\t\tconst store = useStore(key);\n\t\t\t\tAlpine.store(\"reloadState\", store);\n\t\t\t}\n\t\t});\n\t}\n});\n","import Alpine from \"alpinejs\";\nimport htmx from \"htmx.org\";\nimport io from \"socket.io-client\";\nimport { useStore } from \"./stores\";\n\nasync function fetchWithRetry(\n\turl: string,\n\tretry = 3,\n\tdelay = 100,\n): Promise<Response> {\n\ttry {\n\t\treturn await fetch(url);\n\t} catch (e) {\n\t\tif (retry > 0) {\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tfetchWithRetry(url, retry - 1)\n\t\t\t\t\t\t.then(resolve)\n\t\t\t\t\t\t.catch(reject);\n\t\t\t\t}, delay);\n\t\t\t});\n\t\t}\n\t\tthrow e;\n\t}\n}\n\nconst socket = io(\"ws://localhost:4000\", {\n\ttransports: [\"websocket\"],\n});\n\nsocket.on(\"connect\", () => {\n\tconsole.log(\"live-reload: connected\");\n});\n\nsocket.on(\"reload page\", async () => {\n\tconsole.log(\"live-reload: reloading page\");\n\tconst reloadStateStore = useStore(\"reloadState\");\n\treloadStateStore.capture();\n\thtmx\n\t\t.ajax(\"GET\", location.pathname, {\n\t\t\ttarget: \"#root\",\n\t\t\tswap: \"innerHTML\",\n\t\t})\n\t\t.then(() => {\n\t\t\tconst root = document.querySelector<HTMLElement>(\"#root\");\n\t\t\tif (root) {\n\t\t\t\tAlpine.initTree(root);\n\t\t\t\treloadStateStore.restore();\n\t\t\t}\n\t\t});\n});\n\nsocket.on(\"reload style\", async (style) => {\n\tconsole.log(\"live-reload: reload style:\", style);\n\tconst el = document.querySelector<HTMLElement>(`link[href=\"${style}\"]`);\n\tif (el) {\n\t\tconst head = document.querySelector<HTMLElement>(\"head\");\n\t\tconst newStyleContent = await fetchWithRetry(style).then((r) => r.text());\n\t\tconst styleTag = document.createElement(\"style\");\n\t\tstyleTag.id = style;\n\t\tstyleTag.innerHTML = newStyleContent;\n\t\tel.remove();\n\t\thead?.append(styleTag);\n\t} else {\n\t\tconst el = document.querySelector<HTMLElement>(`style[id=\"${style}\"]`);\n\t\tconst newStyleContent = await fetchWithRetry(style).then((r) => r.text());\n\t\tif (el) el.innerHTML = newStyleContent;\n\t}\n});\n\nsocket.on(\"reload script\", async (script) => {\n\tconsole.log(\"live-reload: reload script:\", script);\n\tconst el = document.querySelector<HTMLElement>(`script[src=\"${script}\"]`);\n\tif (el) {\n\t\tconst body = document.querySelector<HTMLElement>(\"body\");\n\t\tconst newScriptContent = await fetchWithRetry(script).then((r) => r.text());\n\t\tconst scriptTag = document.createElement(\"script\");\n\t\tscriptTag.id = script;\n\t\tscriptTag.type = \"text/javascript\";\n\t\tscriptTag.innerHTML = newScriptContent;\n\t\tel.remove();\n\t\tbody?.append(scriptTag);\n\t} else {\n\t\tconst el = document.querySelector<HTMLElement>(`script[id=\"${script}\"]`);\n\t\tconst newSriptContent = await fetchWithRetry(script).then((r) => r.text());\n\t\tif (el) el.innerHTML = newSriptContent;\n\t}\n});\n\nsocket.on(\"disconnect\", () => {\n\tconsole.log(\"live-reload: disconnected\");\n});\n\nsocket.on(\"connect_error\", (err) => {\n\tconsole.error(\n\t\t\"live-reload: socket encountered error: \",\n\t\terr?.message ?? \"unknown.\",\n\t\t\"Closing socket\",\n\t);\n});\n"],"names":["Alpine","io","htmx","el"],"mappings":"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"}