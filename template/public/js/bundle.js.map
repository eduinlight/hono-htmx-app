{"version":3,"file":"bundle.js","sources":["../../client/stores/alpine-live-reload-persist.store.ts","../../client/stores/stores.ts","../../client/index.ts"],"sourcesContent":["import Alpine from \"alpinejs\";\n\ntype StateMap = Record<number, string>;\n\nexport class ReloadStateStore {\n\tstatic NAME = \"reloadState\";\n\n\tpublic capture() {\n\t\tconst stateMap: StateMap = {};\n\t\tdocument.querySelectorAll<HTMLElement>(\"[x-data]\").forEach((el, index) => {\n\t\t\tconst state = Alpine.$data(el);\n\t\t\tif (state) {\n\t\t\t\tstateMap[index] = JSON.parse(JSON.stringify(state)); // deep copy\n\t\t\t}\n\t\t});\n\t\tsessionStorage.setItem(\"__alpine_state__\", JSON.stringify(stateMap));\n\t}\n\n\tpublic restore() {\n\t\tconst raw = sessionStorage.getItem(\"__alpine_state__\");\n\t\tif (!raw) return;\n\t\ttry {\n\t\t\tconst stateMap: StateMap = JSON.parse(raw);\n\t\t\tdocument\n\t\t\t\t.querySelectorAll<HTMLElement>(\"[x-data]\")\n\t\t\t\t.forEach((el, index) => {\n\t\t\t\t\tconst state = Alpine.$data(el);\n\t\t\t\t\tif (state) {\n\t\t\t\t\t\tObject.assign(state, stateMap[index]);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\tsessionStorage.removeItem(\"__alpine_state__\");\n\t\t} catch (e) {\n\t\t\tconsole.warn(\"Could not restore Alpine state\", e);\n\t\t}\n\t}\n}\n","import Alpine from \"alpinejs\";\nimport { ReloadStateStore } from \"./alpine-live-reload-persist.store\";\n\nconst stores = {\n\t[ReloadStateStore.NAME]: ReloadStateStore,\n} as const;\n\ntype Stores = typeof stores;\ntype StoreInstances = {\n\t[K in keyof Stores]: InstanceType<Stores[K]>;\n};\n\nexport function useStore<K extends keyof Stores>(name: K): StoreInstances[K] {\n\treturn Alpine.store(name) as StoreInstances[K];\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n\tif (Alpine) {\n\t\tfor (const [key, StoreClass] of Object.entries(stores))\n\t\t\tAlpine.store(key, new StoreClass());\n\t} else {\n\t\tdocument.addEventListener(\"alpine:init\", () => {\n\t\t\tfor (const key of Object.keys(stores)) {\n\t\t\t\tconst store = useStore(key);\n\t\t\t\tAlpine.store(\"reloadState\", store);\n\t\t\t}\n\t\t});\n\t}\n});\n","console.log(\"here what??\")\n\nimport \"./stores\";\n"],"names":["Alpine"],"mappings":";;;;;EAIO,MAAM,iBAAiB;AAAA,IAGtB,UAAU;AAChB,YAAM,WAAqB,CAAC;AAC5B,eAAS,iBAA8B,UAAU,EAAE,QAAQ,CAAC,IAAI,UAAU;AACnE,cAAA,QAAQA,QAAO,MAAM,EAAE;AAC7B,YAAI,OAAO;AACV,mBAAS,KAAK,IAAI,KAAK,MAAM,KAAK,UAAU,KAAK,CAAC;AAAA,QAAA;AAAA,MACnD,CACA;AACD,qBAAe,QAAQ,oBAAoB,KAAK,UAAU,QAAQ,CAAC;AAAA,IAAA;AAAA,IAG7D,UAAU;AACV,YAAA,MAAM,eAAe,QAAQ,kBAAkB;AACrD,UAAI,CAAC,IAAK;AACN,UAAA;AACG,cAAA,WAAqB,KAAK,MAAM,GAAG;AACzC,iBACE,iBAA8B,UAAU,EACxC,QAAQ,CAAC,IAAI,UAAU;AACjB,gBAAA,QAAQA,QAAO,MAAM,EAAE;AAC7B,cAAI,OAAO;AACV,mBAAO,OAAO,OAAO,SAAS,KAAK,CAAC;AAAA,UAAA;AAAA,QACrC,CACA;AACF,uBAAe,WAAW,kBAAkB;AAAA,eACpC,GAAG;AACH,gBAAA,KAAK,kCAAkC,CAAC;AAAA,MAAA;AAAA,IACjD;AAAA,EAEF;AA/BC,gBADY,kBACL,QAAO;ACFf,QAAM,SAAS;AAAA,IACd,CAAC,iBAAiB,IAAI,GAAG;AAAA,EAC1B;AAOO,WAAS,SAAiC,MAA4B;AACrE,WAAAA,QAAO,MAAM,IAAI;AAAA,EACzB;AAEA,WAAS,iBAAiB,oBAAoB,MAAM;AACnD,QAAIA,SAAQ;AACX,iBAAW,CAAC,KAAK,UAAU,KAAK,OAAO,QAAQ,MAAM;AACpD,QAAAA,QAAO,MAAM,KAAK,IAAI,WAAA,CAAY;AAAA,IAAA,OAC7B;AACG,eAAA,iBAAiB,eAAe,MAAM;AAC9C,mBAAW,OAAO,OAAO,KAAK,MAAM,GAAG;AAChC,gBAAA,QAAQ,SAAS,GAAG;AACnB,UAAAA,QAAA,MAAM,eAAe,KAAK;AAAA,QAAA;AAAA,MAClC,CACA;AAAA,IAAA;AAAA,EAEH,CAAC;AC5BD,UAAQ,IAAI,aAAa;;"}